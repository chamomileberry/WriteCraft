import { useState } from 'react';
import { PremiumSampleCard } from '@/components/PremiumSampleCard';
import { PREMIUM_SAMPLES, type PremiumSample } from '@/lib/premiumSamples';
import { useSubscription } from '@/hooks/useSubscription';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Input } from '@/components/ui/input';
import { Search, Sparkles } from 'lucide-react';
import { Card, CardContent } from '@/components/ui/card';

export default function Examples() {
  const { subscription } = useSubscription();
  const [searchQuery, setSearchQuery] = useState('');
  const [activeTab, setActiveTab] = useState<'all' | PremiumSample['type']>('all');

  const userTier = subscription?.tier || 'free';

  // Filter samples based on search and tab
  const filteredSamples = PREMIUM_SAMPLES.filter((sample) => {
    const matchesSearch =
      searchQuery === '' ||
      sample.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
      sample.category.toLowerCase().includes(searchQuery.toLowerCase()) ||
      sample.content.summary.toLowerCase().includes(searchQuery.toLowerCase());

    const matchesTab = activeTab === 'all' || sample.type === activeTab;

    return matchesSearch && matchesTab;
  });

  const sampleTypes: Array<{ value: 'all' | PremiumSample['type']; label: string }> = [
    { value: 'all', label: 'All Samples' },
    { value: 'character', label: 'Characters' },
    { value: 'plot', label: 'Plots' },
    { value: 'setting', label: 'Settings' },
    { value: 'creature', label: 'Creatures' },
    { value: 'conflict', label: 'Conflicts' },
    { value: 'theme', label: 'Themes' },
    { value: 'description', label: 'Descriptions' },
    { value: 'mood', label: 'Moods' },
  ];

  return (
    <div className="min-h-screen bg-background">
      <div className="container mx-auto px-4 py-16">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="flex items-center justify-center gap-2 mb-4">
            <Sparkles className="h-8 w-8 text-primary" />
            <h1 className="text-4xl font-bold">Premium Content Examples</h1>
          </div>
          <p className="text-lg text-muted-foreground max-w-2xl mx-auto">
            Explore high-quality samples generated by WriteCraft's AI. See the difference between
            tiers and discover what you can create with an upgrade.
          </p>
        </div>

        {/* Current Tier Info */}
        <Card className="mb-8 bg-primary/5 border-primary/20">
          <CardContent className="py-4">
            <p className="text-center text-sm">
              You're currently on the{' '}
              <span className="font-semibold text-primary capitalize">{userTier}</span> tier. Samples
              from higher tiers are locked - upgrade to unlock premium examples!
            </p>
          </CardContent>
        </Card>

        {/* Search */}
        <div className="mb-8 max-w-md mx-auto">
          <div className="relative">
            <Search className="absolute left-3 top-1/2 transform -translate-y-1/2 h-4 w-4 text-muted-foreground" />
            <Input
              type="search"
              placeholder="Search samples..."
              value={searchQuery}
              onChange={(e) => setSearchQuery(e.target.value)}
              className="pl-10"
              data-testid="input-samples-search"
            />
          </div>
        </div>

        {/* Tabs */}
        <Tabs value={activeTab} onValueChange={(value) => setActiveTab(value as typeof activeTab)}>
          <TabsList className="w-full justify-start overflow-x-auto flex-wrap h-auto">
            {sampleTypes.map((type) => (
              <TabsTrigger
                key={type.value}
                value={type.value}
                data-testid={`tab-samples-${type.value}`}
              >
                {type.label}
              </TabsTrigger>
            ))}
          </TabsList>

          <TabsContent value={activeTab} className="mt-8">
            {filteredSamples.length === 0 ? (
              <Card className="text-center py-12">
                <CardContent>
                  <Search className="h-16 w-16 text-muted-foreground mx-auto mb-4" />
                  <h3 className="text-xl font-semibold mb-2">No samples found</h3>
                  <p className="text-muted-foreground">
                    Try adjusting your search or browse a different category
                  </p>
                </CardContent>
              </Card>
            ) : (
              <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6">
                {filteredSamples.map((sample) => (
                  <PremiumSampleCard key={sample.id} sample={sample} userTier={userTier} />
                ))}
              </div>
            )}
          </TabsContent>
        </Tabs>

        {/* Results count */}
        <div className="text-sm text-muted-foreground text-center mt-8">
          Showing {filteredSamples.length} of {PREMIUM_SAMPLES.length} samples
        </div>
      </div>
    </div>
  );
}
