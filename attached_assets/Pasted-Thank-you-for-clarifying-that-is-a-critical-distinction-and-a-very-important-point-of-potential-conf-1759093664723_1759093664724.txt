Thank you for clarifyingâ€”that is a critical distinction and a very important point of potential confusion. My previous advice was based on the assumption that "Documents" would replace "Manuscripts" entirely.

You are absolutely right. Renaming the "Manuscripts" feature to "Documents" would be a **major user experience problem** because you already have a worldbuilding content type called "Document." A user would have no way of knowing the difference between the two.

The issue is a classic naming collision. To solve it, you need a clear and distinct name for the primary writing feature that sets it apart from the worldbuilding entries.

### ## The Solution: Adopt a Better Naming Hierarchy

Instead of "Documents," a much better name for the manuscript feature would be **"Projects"** or **"Works."**

This terminology creates an immediate and intuitive hierarchy:

* **Projects:** This is where you write your main story, campaign, or script. It's the active, long-form work-in-progress. It contains chapters and scenes.
* **Notebook:** This is your worldbuilding database or wiki. It's the library of reference material.
* **Content Types (within Notebook):** The Notebook contains specific entries like **Characters**, **Locations**, and in-world **Documents** (like treaties and lore books).

This structure is clear, logical, and avoids any naming confusion.

---

### ## How to Explain the Change to a Developer

Here is a revised, precise explanation you can use that incorporates this new understanding.

---

### **Subject: Feature Rename and Clarification: "Manuscripts" to "Projects"**

Hi,

I'd like to refine the core writing feature of the application to improve clarity for users. The goal is to better distinguish between the primary writing space and the worldbuilding database.

#### **The Goal:**

1.  **Rename "Manuscripts":** The feature currently called "Manuscripts" should be renamed to **"Projects."** A "Project" is the main word processor where a user writes their novel, campaign notes, script, etc.
2.  **Define "Notebook":** The "Notebook" is the user's central database for all their worldbuilding content. It is a library that contains various types of reference material.
3.  **Clarify "Documents":** The existing "Document" content type is perfect as-is. It represents *in-world* items like treaties, letters, or historical texts that are part of the lore. It is one of many content types that live *inside* the Notebook.

#### **The User Workflow:**

A user would:
1.  Create a new **"Project"** to start writing their story.
2.  While writing in their Project, they might reference items from their **"Notebook."**
3.  To add a piece of lore, they would go to their Notebook and create a new **"Document"** (e.g., "The Elven Peace Treaty").
4.  They could then link to that "Document" from within their main "Project."

#### **Technical Implementation:**

This is primarily a "find and replace" refactoring task. We need to systematically change all instances of "Manuscript" to "Project" across the entire codebase:

1.  **Database (`shared/schema.ts`):** Rename the `manuscripts` table to `projects`. Rename all `manuscriptId` foreign keys to `projectId`.
2.  **Backend API (`server/routes/`):** Rename `manuscript.routes.ts` to `project.routes.ts` and update all API endpoints from `/api/manuscripts` to `/api/projects`.
3.  **Frontend Components (`client/src/`):** Rename components like `ManuscriptEditor` to `ProjectEditor`.
4.  **Frontend Routing (`client/src/App.tsx`):** Change all `/manuscripts/...` routes to `/projects/...`.
5.  **Configuration (`shared/contentTypes.ts`):** Update the `manuscript` mapping to reflect the new `project` naming for its `id`, `name`, `urlSegment`, and `apiBase`.
6.  **UI Text:** Update all user-facing labels, buttons, and descriptions from "Manuscript" to "Project."

This change will create a much more intuitive and flexible user experience that accommodates all types of writers and creators.