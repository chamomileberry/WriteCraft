I'd like to refine the core writing feature of the application to improve clarity for users. The goal is to better distinguish between the primary writing space and the worldbuilding database.

The Goal:
Rename "Manuscripts": The feature currently called "Manuscripts" should be renamed to "Projects." A "Project" is the main word processor where a user writes their novel, campaign notes, script, etc.

Define "Notebook": The "Notebook" is the user's central database for all their worldbuilding content. It is a library that contains various types of reference material.

Clarify "Documents": The existing "Document" content type is perfect as-is. It represents in-world items like treaties, letters, or historical texts that are part of the lore. It is one of many content types that live inside the Notebook.

The User Workflow:
A user would:

Create a new "Project" to start writing their story.

While writing in their Project, they might reference items from their "Notebook."

To add a piece of lore, they would go to their Notebook and create a new "Document" (e.g., "The Elven Peace Treaty").

They could then link to that "Document" from within their main "Project."

Technical Implementation:
This is primarily a "find and replace" refactoring task. We need to systematically change all instances of "Manuscript" to "Project" across the entire codebase:

Database (shared/schema.ts): Rename the manuscripts table to projects. Rename all manuscriptId foreign keys to projectId.

Backend API (server/routes/): Rename manuscript.routes.ts to project.routes.ts and update all API endpoints from /api/manuscripts to /api/projects.

Frontend Components (client/src/): Rename components like ManuscriptEditor to ProjectEditor.

Frontend Routing (client/src/App.tsx): Change all /manuscripts/... routes to /projects/....

Configuration (shared/contentTypes.ts): Update the manuscript mapping to reflect the new project naming for its id, name, urlSegment, and apiBase.

UI Text: Update all user-facing labels, buttons, and descriptions from "Manuscript" to "Project."

This change will create a much more intuitive and flexible user experience that accommodates all types of writers and creators.